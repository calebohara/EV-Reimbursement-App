<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EV kWh Reimbursement App</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="icon" type="image/png" href="ev_favicon.png">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <style>
    :root {
      --bg-color: #f5f5f7;
      --text-color: #212529;
      --container-bg: #ffffff;
      --pre-bg: #f8f9fa;
      --form-bg: #ffffff;
      --form-text: #212529;
    }
    body.dark-mode {
      --bg-color: #212529;
      --text-color: #f5f5f7;
      --container-bg: #343a40;
      --pre-bg: #495057;
      --form-bg: #495057;
      --form-text: #f5f5f7;
    }
    body {
      background-color: var(--bg-color);
      color: var(--text-color);
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .container {
      max-width: 600px;
      padding: 20px;
      background-color: var(--container-bg);
      border-radius: 15px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
      position: relative;
    }
    .result { font-size: 1.5rem; font-weight: bold; color: #28a745; }
    .btn-dark-mode { position: absolute; top: 10px; right: 10px; }
    .btn-site-help { position: absolute; top: 10px; left: 10px; }
    .footer-divider {
      border-top: 1px solid #dee2e6;
      margin-top: 30px;
      padding-top: 15px;
    }
    .credit {
      font-size: 0.875rem;
      text-align: center;
      color: #6c757d;
    }
    .siemens-header {
      font-size: 1.5rem;
      font-weight: bold;
      text-align: center;
      color: #009999;
      margin-bottom: 15px;
    }
    .file-help-group {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .file-help-group .form-control {
      flex: 1;
    }
    .modal-content {
      background-color: var(--container-bg);
      color: var(--text-color);
    }
    pre {
      background-color: var(--pre-bg);
      padding: 10px;
      border-radius: 5px;
    }
    .form-control {
      background-color: var(--form-bg);
      color: var(--form-text);
      border: 1px solid #ced4da;
    }
    .form-control:focus {
      background-color: var(--form-bg);
      color: var(--form-text);
      border-color: #86b7fe;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    .billing-box {
      background: var(--container-bg);
      color: var(--text-color);
      border-radius: 18px;
      box-shadow: 0 6px 24px 0 rgba(0,0,0,0.10), 0 1.5px 4px 0 rgba(0,0,0,0.08);
      padding: 24px 18px 16px 18px;
      margin-bottom: 24px;
      border: 1px solid #dee2e6;
      transition: box-shadow 0.2s, background 0.2s, color 0.2s;
    }
    .billing-box:hover {
      box-shadow: 0 10px 32px 0 rgba(0,0,0,0.13), 0 2px 8px 0 rgba(0,0,0,0.10);
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <div class="siemens-header">SIEMENS</div>
    <button class="btn btn-secondary btn-dark-mode" onclick="toggleDarkMode()"><i class="bi bi-moon-fill"></i></button>
    <button class="btn btn-info btn-site-help" data-bs-toggle="modal" data-bs-target="#siteHelpModal" title="Site Help">
      <i class="bi bi-question-circle-fill"></i>
    </button>

    <h2 class="mb-4 text-center"><i class="inarsbi bi-car-front-fill"></i> EV kWh Reimbursement</h2>

    <div class="billing-box mb-4">
      <div class="row mb-3">
        <div class="col-6">
          <label for="startDate"><i class="bi bi-calendar-date-fill"></i> Billing Period Start:</label>
          <input type="date" id="startDate" class="form-control" onchange="saveData()">
        </div>
        <div class="col-6">
          <label for="endDate"><i class="bi bi-calendar-date-fill"></i> Billing Period End:</label>
          <input type="date" id="endDate" class="form-control" onchange="saveData()">
        </div>
      </div>
      <div class="row mb-1">
        <div class="col-6">
          <button class="btn btn-secondary w-100" onclick="generateKwhFields()">
            <i class="bi bi-plus-square"></i> Generate kWh Fields
          </button>
        </div>
        <div class="col-6">
          <button class="btn btn-warning w-100" onclick="resetForm()">
            <i class="bi bi-arrow-counterclockwise"></i> Reset
          </button>
        </div>
      </div>
    </div>

    <div class="mb-3">
      <label><i class="bi bi-lightning-charge-fill"></i> Cost per kWh ($):</label>
      <input type="number" id="costPerKwh" step="0.01" class="form-control" oninput="saveData()">
    </div>

    <div class="mb-3">
      <label><i class="bi bi-filetype-csv"></i> Got your kWh data ready? Upload your CSV file below!</label>
      <div class="file-help-group">
        <input type="file" accept=".csv" id="csvFile" class="form-control">
        <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#helpModal" title="CSV Format Help">
          <i class="bi bi-question-circle-fill"></i>
        </button>
      </div>
      <div class="row mt-2">
        <div class="col-6">
          <button class="btn btn-secondary w-100" onclick="generateCSVTemplate()"><i class="bi bi-download"></i> Download CSV Template</button>
        </div>
        <div class="col-6">
          <button class="btn btn-primary w-100" onclick="importCSV()"><i class="bi bi-upload"></i> Import from CSV</button>
        </div>
      </div>
    </div>

    <div id="kwhFields" class="mb-3"></div>

    <div class="row mb-3">
      <div class="col-6">
        <button class="btn btn-success w-100" onclick="calculateTotal()"><i class="bi bi-calculator-fill"></i> Calculate Reimbursement</button>
      </div>
      <div class="col-6">
        <button class="btn btn-info w-100" onclick="exportToExcel()"><i class="bi bi-file-earmark-excel-fill"></i> Export to Excel</button>
      </div>
    </div>

    <div class="text-center result" id="result"></div>

    <div class="row mb-3">
      <div class="col-6">
        <a href="https://travel.siemens.com" target="_blank" rel="noopener" class="btn btn-primary w-100"><i class="bi bi-globe"></i> Travel@Siemens</a>
      </div>
      <div class="col-6">
        <button class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#evPolicyModal"><i class="bi bi-file-earmark-text"></i> EV Policy</button>
      </div>
    </div>

    <div class="mb-3">
      <button class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#changelogModal"><i class="bi bi-clock-history"></i> Changelog</button>
    </div>

    <div class="footer-divider">
      <div class="credit">Created by: Caleb O'Hara</div>
      <div class="text-center mt-2">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#contactModal">Contact</button>
      </div>
    </div>
    <div class="credit mt-2">Version 1.6.0</div>
  </div>

  <!-- Help Modal -->
  <div class="modal fade" id="helpModal" tabindex="-1" aria-labelledby="helpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="helpModalLabel">CSV Import Help</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Your CSV should contain two columns: Date and kWh Usage.</p>
          <p>Use the following structure:</p>
          <pre>
Date,kWh Usage
2024-01-01,10.5
2024-01-02,12.0
          </pre>
          <p>Important Notes:</p>
          <ul>
            <li>The first row must be the header row exactly as shown.</li>
            <li>Dates must be in YYYY-MM-DD format.</li>
            <li>kWh values should be numeric.</li>
            <li>Do not leave blank rows or columns.</li>
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Contact Modal -->
  <div class="modal fade" id="contactModal" tabindex="-1" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="contactModalLabel">Contact Me</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Recommend features or report any issues you encounter.</p>
          <p><a href="mailto:caleb.ohara@siemens.com" title="Send an email to Caleb O'Hara">Email me at caleb.ohara@siemens.com</a></p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Site Help Modal -->
  <div class="modal fade" id="siteHelpModal" tabindex="-1" aria-labelledby="siteHelpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="siteHelpModalLabel">Site Help</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>Welcome to the EV kWh Reimbursement App! Follow these steps to use the application:</p>
          <h6>Step 1: Select Billing Period</h6>
          <p>Enter the start and end dates of your billing period using the "Billing Period Start" and "Billing Period End" date fields. Ensure the start date is before the end date.</p>
          <h6>Step 2: Generate kWh Fields</h6>
          <p>Click "Generate kWh Fields" to create input fields for each day in your selected period. These fields will appear below the button.</p>
          <h6>Step 3: Enter kWh Usage</h6>
          <p>Manually enter the kWh usage for each day in the generated fields. Alternatively, upload a CSV file by selecting it and clicking "Import from CSV". For CSV format details, see the CSV help button next to the file input.</p>
          <h6>Step 4: Enter Cost per kWh</h6>
          <p>Input the cost per kWh in dollars in the "Cost per kWh" field. Use a numeric value (e.g., 0.15).</p>
          <h6>Step 5: Calculate Reimbursement</h6>
          <p>Click "Calculate Reimbursement" to compute the total based on your kWh usage and cost per kWh. The result will display below.</p>
          <h6>Step 6: Export to Excel</h6>
          <p>Click "Export to Excel" to save your data to an Excel file (if implemented).</p>
          <h6>Step 7: Reset Form</h6>
          <p>Click "Reset" to clear all inputs and start over if needed.</p>
          <h6>Additional Features</h6>
          <ul>
            <li><strong>Dark Mode:</strong> Toggle dark mode with the moon icon at the top right.</li>
            <li><strong>Travel@Siemens:</strong> Click "Travel@Siemens" to visit the Siemens travel site.</li>
            <li><strong>Contact:</strong> Use the "Contact" button to email the developer for support or suggestions.</li>
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- EV Policy Modal -->
  <div class="modal fade" id="evPolicyModal" tabindex="-1" aria-labelledby="evPolicyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="evPolicyModalLabel">EV Policy</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <h5>5.6.3 SIEMENS-PROVIDED EV CHARGER & INSTALLATION</h5>
          <ul>
            <li>By ordering an electric vehicle (EV), an eligible employee agrees to utilize the home charger provided under this Policy as the employee's primary charging method. The employee agrees to use public chargers only on an exception basis, for example when away from home for an extended trip. Siemens will take appropriate action if it determines that an employee is using public chargers on a regular basis in a manner that is non-compliant with this Policy. If an eligible employee resides in a location where the installation of a home charger is not possible (e.g., apartment, subject to HOA restrictions, etc.), the employee should obtain approval from their manager for Siemens Industry, Inc. Policy Smart Infrastructure 25 an exception to use public charging. In this event, the eligible driver shall notify FMS via email that a home charger will not be needed.</li>
            <li>In the event an eligible employee orders an electric vehicle (EV), Siemens will allow the employee to order a Siemens VersiCharge™ home charger through the fleet management provider at no cost to the employee (but see Home Charger Hardware Tax discussion below). Alternatively, the employee may order an EV charger from a Siemens approved source as directed by FMS or Wheels. In the event an employee orders an EV charger via a method outside of the fleet management provider, the employee will expense the cost of the charger through the T&E process under expense category "Fuel."</li>
            <li>In addition to providing a charger, Siemens will cover the cost of installation of the charger up to $1,500 (amounts may vary per business unit and are subject to change). The employee will use a local, licensed professional contractor to install the home charger. When hiring a contractor, employee will ensure the following:
              <ul>
                <li>Contractor is licensed and insured in the state where the work is being done</li>
                <li>Contractor is in receipt of and complies with the VersiCharge™ Manual</li>
                <li>Work is performed in accordance with applicable state and local regulations and building codes</li>
                <li>A detailed invoice is provided, showing the goods and services provided and the amount paid</li>
              </ul>
            </li>
            <li>Siemens supports the cost of installation of a 208/240VAC connected NEMA 6-50 plug, which should not exceed $1,500. If the cost of installation exceeds $1,500 PKK, the employee must submit documentation of the cost to request prior written authorization from the employee's supervisor. Such written authorization, signed by the employee's supervisor, should also be submitted as a receipt in the E2E Travel@Siemens tool. However, Siemens will not reimburse any costs associated with upgrading the electrical systems of the employee's residence. All installation services must be itemized on an invoice and submitted via E2E Travel@Siemens along with the request for reimbursement. Siemens will fund up to $1,500 for services only pertaining to the enablement of EV charging. If required after consultation with Siemens legal counsel, employees in certain states may be eligible for additional reimbursement.</li>
            <li>The employee can seek reimbursement of allowable installation costs in E2E Travel@Siemens using the expense category "Fuel."</li>
            <li>Employee agrees to indemnify Siemens, and Siemens will not be responsible for any damages, liabilities, losses, or expenses arising from the charger, its use or its installation. Upon successful installation of the charger, the employee will pay the contractor and expense the installation through the T&E process.</li>
            <li>In addition, Siemens recommends, but does not require, that the homeowner connect the charger to the cloud, unlocking a host of features including reporting, monitoring and remote start/stop of charging. The charger can be connected via either ethernet (CAT 5/6) or Wi-Fi. Please note that the charger requires a strong Wi-Fi signal to be commissioned via Wi-Fi.</li>
            <li>To enable a connected charger to the cloud, please follow the video instructions for commissioning found at: conVersiCharge™ Mobile App Charger Setup.</li>
            <li>Siemens continues to focus on user experience and is working diligently to incorporate home charging, in addition to adding networks/services to make it easier to charge faster and many more public places.</li>
            <li>Home charging: A standard 120V will charge your vehicle, but at a slower pace until you can install Siemens VersiCharge™ 40 Amp Level 2 Charger. In rare cases, a Siemens VersiCharge™ unit may not be provided and you will be directed to purchase an EV charger from a supplier/source identified by FMS. In this event, use your corporate AMEX as the payment method and enter the expense into E2E Travel@Siemens using the expense category "Fuel."</li>
            <li>Home Charger Hardware Tax: Twenty percent (20%) of the value/price of the EV charger will be included in the taxable income of the EV drivers, subject to appropriate U.S. Federal and state income and payroll taxes. The total amount to be taxed will be provided ratio payroll by FMS or E2E Travel@Siemens.</li>
            <li>PUD adjustment: EV drivers get a reduction in their personal use deduction (PUD) of $25/month, which equates to $12.50/check for businesses that are paid twice/month.</li>
            <li>Home Charger Install Tax: Siemens will fund up to $1,500 for installation of an EV charger. Twenty percent (20%) of the reimbursed installation costs will be included in the taxable income of the EV drivers, subject to appropriate U.S. Federal and state income and payroll taxes. The total amount to be taxed will be provided to payroll via E2E Travel@Siemens.</li>
            <li>Home Charging Reimbursement: EV drivers may be reimbursed for home charging expenses related to their company EV. In order to receive reimbursement, EV drivers should calculate the requested reimbursement amount monthly using the following method:
              <ul>
                <li>Identify the number of kilowatt hours (kWh) used to charge the EV via the EV charger's associated Mobile App</li>
                <li>Identify the electric rate (cost/kWh) on the monthly utility bill</li>
                <li>Multiply the monthly consumption amount (kWh) x the average electric rate (cost/kWh)</li>
              </ul>
              <p>Example: 250 kWh x $0.17/kWh = $42.50 (amount to be submitted through the T&E process).</p>
            </li>
            <li>To receive reimbursement for documented home charging expenses, enter the expense into E2E Travel@Siemens under the expense category "Fuel." All home charging expenses submitted must include a screen shot from your mobile app showing the kWh charged and a copy of the related monthly utility bill.</li>
            <li>The Siemens VersiCharge™ home charger should be used strictly for charging of a company vehicle. In the event an employee changes residence after the charger is installed in their home, the employee will be responsible for the cost to upgrade or transfer the home charger to the new residence. In addition, if the employee's eligibility to participate in the company vehicle Program is discontinued, the employee will not be required to reimburse Siemens for any costs associated with the EV charger installation. The employee will be fully responsible for any continued use or removal of the charger.</li>
          </ul>

          <h5>5.6.4 EV PUBLIC PAYMENT CARD/APP</h5>
          <ul>
            <li>As noted above, by ordering an electric vehicle (EV), an eligible employee is agreeing to utilize the home charger provided under this Policy as the employee's primary charging method. The employee agrees to use public chargers only on an exceptional basis, for example when away from home for an extended trip.</li>
            <li>There is currently no universal payment solution for public charging stations. Siemens FMS has identified a provider with the largest amount of EV charging stations across the U.S. to support your public charging. Prior to taking delivery of your new EV, Wheels will issue a physical card (or other electronic payment method, such as an App) for purchasing EV charging services on participating public charging networks. These locations can be located within the ChargePoint App or via the vehicle's operating system where applicable.</li>
            <li>ChargePoint (public charging): Note, not all ChargePoint locations have DC fast chargers, but they are continuing to grow their network.</li>
            <li>Non-ChargePoint Public Charging expenses: Right now the process is to set up your own individual accounts with charging networks in your area that you can use. When setting up your accounts with other charging networks such as EVGo, Flow, etc., you will need to enter your corporate AMEX as the payment method. Transaction receipts will be required for any transaction exceeding $75.00. Non-ChargePoint Public Charging expenses should be entered in E2E Travel@Siemens under the expense category "Fuel."</li>
            <li>Public Charging Network expansion: Siemens FMS is currently working with Siemens eMobility on expanding your ability to charge easily on other (DC Fast) charging stations across the U.S.</li>
            <li>Charging services applied to this card will be paid via a direct-bill process through Wheels. T&E expense reports may be used ONLY when charging is required outside of the designated network.</li>
            <li>If the EV public charging payment solution is a physical card, lost, misplaced or stolen cards must be promptly reported to Wheels at EVsupport@wheels.com.</li>
            <li>Charging at EV public charging stations must be for EV charging ONLY, regardless of the payment method. No other charges besides EV charging will be reimbursed.</li>
            <li>Public Charging for Fleet Rental: In the event an electric vehicle is provided for your interim rental, public charging should be used via your Amex card and the charges are to be expensed through E2E Travel@Siemens using the expense category "Fuel."</li>
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Changelog Modal -->
  <div class="modal fade" id="changelogModal" tabindex="-1" aria-labelledby="changelogModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="changelogModalLabel">Changelog</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <h6>Version 1.6.0 - May 25, 2025</h6>
          <ul>
            <li>Added 'Download CSV Template' feature, allowing users to generate a CSV file based on the selected billing period for manual entry of kWh usage data.</li>
          </ul>
          <h6>Version 1.5.0 - May 25, 2025</h6>
          <ul>
            <li>Enhanced CSV import functionality with comprehensive error handling, validation, and user feedback for improved data import reliability.</li>
          </ul>
          <h6>Version 1.4.0 - April 15, 2025</h6>
          <ul>
            <li>Introduced "EV Policy" button with a detailed modal containing Siemens' electric vehicle policy information.</li>
          </ul>
          <h6>Version 1.3.0 - March 10, 2025</h6>
          <ul>
            <li>Improved "Site Help" modal with scrollable content and adjusted size for enhanced readability and user experience.</li>
          </ul>
          <h6>Version 1.2.0 - February 20, 2025</h6>
          <ul>
            <li>Added "Site Help" button with a modal providing detailed instructions for application usage.</li>
          </ul>
          <h6>Version 1.1.0 - January 5, 2025</h6>
          <ul>
            <li>Implemented "Travel@Siemens" button linking to the Siemens travel portal for quick access.</li>
          </ul>
          <h6>Version 1.0.0 - December 1, 2024</h6>
          <ul>
            <li>Initial release featuring core functionality for calculating EV kWh reimbursement.</li>
            <li>Included features: billing period selection, kWh input fields, cost per kWh entry, reimbursement calculation, form reset, and Excel export capability.</li>
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function generateCSVTemplate() {
      const startDateStr = document.getElementById('startDate').value;
      const endDateStr = document.getElementById('endDate').value;
      if (!startDateStr || !endDateStr) {
        alert('Please select the billing period start and end dates first.');
        return;
      }
      const startDate = new Date(startDateStr);
      const endDate = new Date(endDateStr);
      if (isNaN(startDate) || isNaN(endDate) || startDate > endDate) {
        alert('Please enter valid billing period dates.');
        return;
      }

      let csvContent = 'Date,kWh Usage\n';
      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
        const formattedDate = d.toISOString().split('T')[0];
        csvContent += `${formattedDate},0\n`;
      }

      const blob = new Blob([csvContent], { type: 'text/csv' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'kwh_template.csv';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }

    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
      const isDarkMode = document.body.classList.contains('dark-mode');
      localStorage.setItem('darkMode', isDarkMode ? 'true' : 'false');
    }

    function generateKwhFields() {
      const startDate = new Date(document.getElementById('startDate').value);
      const endDate = new Date(document.getElementById('endDate').value);
      const kwhFields = document.getElementById('kwhFields');
      kwhFields.innerHTML = '';

      if (!startDate || !endDate || isNaN(startDate) || isNaN(endDate)) {
        alert('Please enter valid start and end dates.');
        return;
      }

      if (startDate > endDate) {
        alert('Start date must be before end date.');
        return;
      }

      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
        const formattedDate = d.toISOString().split('T')[0];
        kwhFields.innerHTML += `
          <div class="mb-2">
            <label><i class="bi bi-battery-charging"></i> ${formattedDate} kWh Usage:</label>
            <input type="number" step="0.01" class="form-control dailyKwh" data-date="${formattedDate}" oninput="saveData()">
          </div>`;
      }
      loadDailyKwh();
    }

    function importCSV() {
      const file = document.getElementById('csvFile').files[0];
      if (!file) {
        alert('Please select a CSV file to upload.');
        return;
      }
      if (!file.name.endsWith('.csv')) {
        alert('Please upload a valid .csv file.');
        return;
      }

      const startDateStr = document.getElementById('startDate').value;
      const endDateStr = document.getElementById('endDate').value;
      if (!startDateStr || !endDateStr) {
        alert('Please select the billing period start and end dates first.');
        return;
      }
      const startDate = new Date(startDateStr);
      const endDate = new Date(endDateStr);
      if (isNaN(startDate) || isNaN(endDate) || startDate > endDate) {
        alert('Please enter valid billing period dates.');
        return;
      }

      const reader = new FileReader();
      reader.onload = function(e) {
        const content = e.target.result;
        const rows = content.split('\n').map(row => row.trim()).filter(row => row);
        if (rows.length < 1) {
          alert('The CSV file is empty.');
          return;
        }

        const headers = rows[0].split(',').map(header => header.trim());
        if (headers.length !== 2 || headers[0] !== 'Date' || headers[1] !== 'kWh Usage') {
          alert('Invalid CSV format. Please ensure the first row contains "Date" and "kWh Usage" headers.');
          return;
        }

        let htmlString = '';
        let imported = 0;
        let invalid = 0;

        for (let i = 1; i < rows.length; i++) {
          const [date, kwh] = rows[i].split(',').map(value => value.trim());
          if (!date || !kwh) {
            invalid++;
            continue;
          }

          const dateObj = new Date(date);
          if (isNaN(dateObj.getTime())) {
            invalid++;
            continue;
          }

          if (dateObj < startDate || dateObj > endDate) {
            invalid++;
            continue;
          }

          const kwhValue = parseFloat(kwh);
          if (isNaN(kwhValue)) {
            invalid++;
            continue;
          }

          htmlString += `
            <div class="mb-2">
              <label><i class="bi bi-battery-charging"></i> ${date} kWh Usage:</label>
              <input type="number" step="0.01" class="form-control dailyKwh" data-date="${date}" value="${kwhValue}" oninput="saveData()">
            </div>`;
          imported++;
        }

        const kwhFields = document.getElementById('kwhFields');
        kwhFields.innerHTML = htmlString;
        saveData();

        if (imported > 0) {
          let message = `Successfully imported ${imported} rows.`;
          if (invalid > 0) {
            message += ` ${invalid} rows were invalid or outside the billing period and were skipped.`;
          }
          alert(message);
        } else if (invalid > 0) {
          alert(`No rows were imported. All ${invalid} rows were invalid or outside the billing period.`);
        } else {
          alert('The CSV file contains no valid data rows.');
        }
      };
      reader.readAsText(file);
    }

    function calculateTotal() {
      const costPerKwh = parseFloat(document.getElementById('costPerKwh').value);
      const dailyKwhInputs = document.querySelectorAll('.dailyKwh');
      let total = 0;
      dailyKwhInputs.forEach(input => { total += parseFloat(input.value || 0); });
      const reimbursement = total * costPerKwh;
      document.getElementById('result').innerText = `Total Reimbursement: $${reimbursement.toFixed(2)}`;
    }

    function resetForm() {
      localStorage.removeItem('startDate');
      localStorage.removeItem('endDate');
      localStorage.removeItem('costPerKwh');
      localStorage.removeItem('dailyKwhData');
      location.reload();
    }

    function exportToExcel() {
      // Excel export logic here if needed
    }

    function saveData() {
      const startDate = document.getElementById('startDate').value;
      const endDate = document.getElementById('endDate').value;
      const costPerKwh = document.getElementById('costPerKwh').value;
      const dailyKwhInputs = document.querySelectorAll('.dailyKwh');
      let dailyKwhData = {};

      dailyKwhInputs.forEach(input => {
        dailyKwhData[input.getAttribute('data-date')] = input.value;
      });

      localStorage.setItem('startDate', startDate);
      localStorage.setItem('endDate', endDate);
      localStorage.setItem('costPerKwh', costPerKwh);
      localStorage.setItem('dailyKwhData', JSON.stringify(dailyKwhData));
    }

    function loadData() {
      const startDate = localStorage.getItem('startDate');
      const endDate = localStorage.getItem('endDate');
      const costPerKwh = localStorage.getItem('costPerKwh');
      const dailyKwhData = JSON.parse(localStorage.getItem('dailyKwhData')) || {};

      if (startDate) document.getElementById('startDate').value = startDate;
      if (endDate) document.getElementById('endDate').value = endDate;
      if (costPerKwh) document.getElementById('costPerKwh').value = costPerKwh;

      if (startDate && endDate) {
        generateKwhFields();
      }

      // Apply dark mode if saved
      if (localStorage.getItem('darkMode') === 'true') {
        document.body.classList.add('dark-mode');
      }
    }

    function loadDailyKwh() {
      const dailyKwhData = JSON.parse(localStorage.getItem('dailyKwhData')) || {};
      const dailyKwhInputs = document.querySelectorAll('.dailyKwh');
      dailyKwhInputs.forEach(input => {
        const date = input.getAttribute('data-date');
        if (dailyKwhData[date]) {
          input.value = dailyKwhData[date];
        }
      });
    }

    window.onload = loadData;
  </script>
  <script>
    // Disable right-click (context menu)
    document.addEventListener('contextmenu', function(e) {
      e.preventDefault();
    });

    // Disable keyboard shortcuts for viewing source and developer tools
    document.addEventListener('keydown', function(e) {
      if (e.ctrlKey && e.key === 'u') {
        e.preventDefault();
      }
      if (e.key === 'F12') {
        e.preventDefault();
      }
      if (e.ctrlKey && e.shiftKey && e.key === 'I') {
        e.preventDefault();
      }
      if (e.ctrlKey && e.shiftKey && e.key === 'J') {
        e.preventDefault();
      }
      if (e.ctrlKey && e.shiftKey && e.key === 'C') {
        e.preventDefault();
      }
    });
  </script>
</body>
</html>